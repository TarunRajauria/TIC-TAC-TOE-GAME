def print_board(board):
    for row in board:
        print(' | '.join(row))
        print('-' * 5)

def check_winner(board, player):
    win_conditions = [
        [board[0][0], board[0][1], board[0][2]],  
        [board[1][0], board[1][1], board[1][2]],  
        [board[2][0], board[2][1], board[2][2]],  
        [board[0][0], board[1][0], board[2][0]], 
        [board[0][1], board[1][1], board[2][1]], 
        [board[0][2], board[1][2], board[2][2]],  
        [board[0][0], board[1][1], board[2][2]],  
        [board[0][2], board[1][1], board[2][0]]   
    ]
    return [player, player, player] in win_conditions

def is_board_full(board):
    return all(cell != ' ' for row in board for cell in row)

def tic_tac_toe():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    current_player = 'X'
    
    while True:
        print_board(board)
        print(f"Player {current_player}'s turn")
        
        while True:
            try:
                row = int(input("Enter row (0, 1, 2): "))
                col = int(input("Enter column (0, 1, 2): "))
                if board[row][col] == ' ':
                    board[row][col] = current_player
                    break
                else:
                    print("Cell already taken, choose another.")
            except (ValueError, IndexError):
                print("Invalid input. Please enter numbers between 0 and 2.")
        
        if check_winner(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            break
        
        if is_board_full(board):
            print_board(board)
            print("It's a tie!")
            break
        
        current_player = 'O' if current_player == 'X' else 'X'

if __name__ == "__main__":
    tic_tac_toe()
